name: ICP Build and Deploy

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Specify the Node.js version you need

      # Step 3: Install DFX ICP CLI by downloading the binary directly
      - name: Install DFX
        env:
          DFX_VERSION: "1.16.0" # Specify the desired DFX version
        run: |
          echo "Downloading DFX version $DFX_VERSION..."
          wget https://github.com/dfinity/sdk/releases/download/v$DFX_VERSION/dfx-$DFX_VERSION-x86_64-unknown-linux-gnu.tar.gz -O dfx.tar.gz
          
          echo "Creating installation directory..."
          mkdir -p $HOME/.local/share/dfx/bin
          
          echo "Extracting DFX binary..."
          tar -xzf dfx.tar.gz -C $HOME/.local/share/dfx/bin --strip-components=1
          
          echo "Adding DFX to PATH..."
          echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
          
          echo "Cleaning up..."
          rm dfx.tar.gz
          
          echo "DFX installation completed."

      # Step 4: Verify DFX installation
      - name: Verify DFX Installation
        run: dfx --version

      # Step 5: Start DFX replica in the background
      - name: Start DFX Replica
        run: dfx start --clean --background

      # Step 6: Wait for the replica to be ready
      - name: Wait for DFX Replica to Start
        run: sleep 10

      # Step 7: Deploy canisters
      - name: Deploy Canisters
        run: dfx deploy

      # Step 8: Cache NPM dependencies
      - name: Cache NPM modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 9: Install NPM dependencies
      - name: Install NPM Dependencies
        run: npm install

      # Step 10: Start the application
      - name: Start Application
        run: npm start
